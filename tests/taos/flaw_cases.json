[
  {
    "conn": {"dsn": "TAOS_ODBC_DSN"},
    "sqls": [
      "drop database if exists foo",
      "create database if not exists foo",
      "drop table if exists foo.t",
      "create table foo.t(ts timestamp,name varchar(20))",
      {
        "sql": "select table_name, db_name from information_schema.ins_tables t where t.db_name like ?",
        "executes": [
          {
            "params": [
              ["foo"]
            ],
            "rs": [[["t","foo"]]],
            "comments": "3.0.2.0 regression test fails",
            "positive": false
          }
        ]
      }
    ]
  },{
    "comments": "the same sequence as above, but weird failure",
    "comments": "[-2147474431/0x80002401]invalid catalog input parameters",
    "conn": {"dsn": "TAOS_ODBC_DSN"},
    "sqls": [
      "drop database if exists foo",
      "create database if not exists foo",
      "drop table if exists foo.t",
      "create table foo.t(ts timestamp,name varchar(20))",
      {
        "sql": "select table_name, db_name from information_schema.ins_tables t where t.db_name like ?",
        "executes": [
          {
            "params": [
              ["foo"]
            ],
            "rs": [[["t","foo"]]],
            "positive": false
          }
        ]
      }
    ]
  },{
    "conn": {"dsn": "TAOS_ODBC_DSN"},
    "sqls": [
      "drop database if exists foo",
      "create database if not exists foo",
      "drop table if exists foo.t",
      "create table foo.t(ts timestamp,name varchar(20))",
      {
        "sql": "select table_name, db_name from (select table_name, db_name from information_schema.ins_tables) t where t.db_name like 'foo'",
        "rs": [["t","foo"]],
        "comments": "3.0.2.0 regression test fails",
        "positive": false
      }
    ]
  },{
    "comments": "[-2147473918/0x80002602]Invalid column name",
    "conn": {"dsn": "TAOS_ODBC_DSN"},
    "sqls": [
      "drop database if exists foo",
      "create database if not exists foo",
      "drop table if exists foo.t",
      "create table foo.t(ts timestamp,name varchar(20))",
      {
        "sql": "select table_name, db_name from (select table_name, db_name from information_schema.ins_tables) t where t.db_name like ?",
        "executes": [
          {
            "params": [
              ["foo"]
            ],
            "rs": [[["t","foo"]]],
            "positive": false
          }
        ]
      }
    ]
  },{
    "conn": {},
    "sqls": [
      "show databases",
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create table t(ts timestamp,age double)",
      {
        "sql":"insert into t (ts, age) values (?, ?)",
        "executes": [
          {
            "params": [{"timestamp":1662861478799}, 123]
          }
        ]
      }
    ]
  },{
    "comments": "insert into ? values (?, ?)",
    "comments": "different subtables using the different supertables, but the same structure",
    "comments": "better not use this",
    "comments": "implementation NOTE: once tblname is changed, set-tbname/get-tags-field/get-cols-field all have to be called again to refresh internal data structure",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create table st1 (ts timestamp, age int) tags (name varchar(20))",
      "create table st2 (ts timestamp, age int) tags (name varchar(20))",
      {
        "sql": "insert into suzhou using st1 tags ('suzhou') values (1665226861289, 200)"
      },{
        "sql": "insert into shanghai using st2 tags ('shanghai') values (1665226861299, 100)"
      },{
        "sql": "insert into ? values (?, ?)",
        "executes": [
          {
            "params": ["shanghai", {"timestamp":1665226971292}, {"int":160}]
          },{
            "params": ["suzhou", {"timestamp":1665226961290}, {"int":340}]
          }
        ]
      },{
        "sql": "select count(*) from suzhou",
        "rs": [[2]]
      },{
        "sql": "select count(*) from shanghai",
        "rs": [[2]]
      }
    ]
  },{
    "comments": "insert into ? values (?, ?)",
    "comments": "different subtables using the different supertables, with different structures as well",
    "comments": "better not use this",
    "comments": "implementation NOTE: once tblname is changed, set-tbname/get-tags-field/get-cols-field all have to be called again to refresh internal data structure",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create table st1 (ts timestamp, age int) tags (name varchar(20))",
      "create table st2 (ts timestamp, name varchar(20)) tags (age int)",
      {
        "sql": "insert into suzhou using st1 tags ('suzhou') values (1665226861289, 200)"
      },{
        "sql": "insert into shanghai using st2 tags (123) values (1665226861299, 'v100')"
      },{
        "sql": "insert into ? values (?, ?)",
        "executes": [
          {
            "params": ["shanghai", {"timestamp":1665226971292}, "v200"]
          },{
            "params": ["suzhou", {"timestamp":1665226961290}, {"int":789}]
          }
        ]
      },{
        "sql": "select count(*) from suzhou",
        "rs": [[2]]
      },{
        "sql": "select count(*) from shanghai",
        "rs": [[2]]
      }
    ]
  },{
    "comments": "insert into ? values (?, ?)",
    "comments": "different subtables using the same supertable",
    "comments": "better not use this",
    "comments": "implementation NOTE: once tblname is changed, set-tbname/get-tags-field/get-cols-field all have to be called again to refresh internal data structure",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create table st (ts timestamp, age int) tags (name varchar(20))",
      {
        "sql": "insert into suzhou using st tags ('suzhou') values (1665226861289, 200)"
      },{
        "sql": "insert into shanghai using st tags ('shanghai') values (1665226861299, 100)"
      },{
        "sql": "insert into ? values (?, ?)",
        "executes": [
          {
            "params": ["shanghai", {"timestamp":1665226971292}, {"int":160}]
          },{
            "params": ["suzhou", {"timestamp":1665226961290}, {"int":240}]
          }
        ]
      },{
        "sql": "select count(*) from suzhou",
        "rs": [[2]]
      },{
        "sql": "select count(*) from shanghai",
        "rs": [[2]]
      }
    ]
  },{
    "comments": "insert into ? values (?, ?)",
    "comments": "in case when it's for normal table, have to ignore failure of `taos_stmt_get_tag_fields`",
    "comments": "better not use this",
    "comments": "and will result in memleakage",
    "git-commit":"d3b61c5261962d188914f7d5f8c241fed9322284",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create table shanghai (ts timestamp, age int)",
      "create table suzhou (ts timestamp, age int)",
      {
        "sql": "insert into suzhou (ts, age) values (1665226861289, 200)"
      },{
        "sql": "insert into shanghai (ts, age) values (1665226861299, 100)"
      },{
        "sql": "insert into ? values (?, ?)",
        "executes": [
          {
            "params": ["shanghai", {"timestamp":1665226971292}, {"int":160}]
          },{
            "params": ["suzhou", {"timestamp":1665226961290}, {"int":240}]
          }
        ]
      },{
        "sql": "select count(*) from suzhou",
        "rs": [[2]]
      },{
        "sql": "select count(*) from shanghai",
        "rs": [[2]]
      }
    ]
  },{
    "comments": "insert into ? using st tags (?) values (?, ?)",
    "comments": "different subtables with using clause",
    "comments": "better not use this",
    "comments": "implementation NOTE: once tblname is changed, set-tbname/get-tags-field/get-cols-field all have to be called again to refresh internal data structure",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create stable st (ts timestamp, age int) tags (name varchar(20))",
      {
        "sql": "insert into suzhou using st tags ('suzhou') values (1665226861289, 200)"
      },{
        "sql": "insert into shanghai using st tags ('shanghai') values (1665226861299, 100)"
      },{
        "sql": "insert into ? using st tags (?) values (?, ?)",
        "executes": [
          {
            "comments": "this is new tag, new subtable will be created with tag-values and col-values",
            "params": ["foo", "foo", {"timestamp":1665226961295}, {"int":295}]
          },{
            "comments": "cause `shanghai` subtable exists, tag value `foo` is left as it is in taosc-implementation",
            "params": ["shanghai", "foo", {"timestamp":1665226971292}, {"int":160}]
          },{
            "comments": "cause `suzhou` subtable exists, tag value `bar` is left as it is in taosc-implementation",
            "params": ["suzhou", "bar", {"timestamp":1665226961290}, {"int":340}]
          },{
            "comments": "this is new tag, although tag `foo` has already been used by subtbl `foo`, new subtable will be created with tag-values and col-values",
            "params": ["beijin", "foo", {"timestamp":1665226961290}, {"int":340}]
          }
        ]
      },{
        "sql": "select count(*) from st where name = 'foo'",
        "rs": [[2]]
      },{
        "sql": "select count(*) from beijin",
        "rs": [[1]]
      },{
        "sql": "select count(*) from foo",
        "rs": [[1]]
      },{
        "sql": "select count(*) from suzhou",
        "rs": [[2]]
      },{
        "sql": "select count(*) from shanghai",
        "rs": [[2]]
      }
    ]
  },{
    "comments": "insert into xsuzhou using st tags ('ysuzhou') values (1665226861289, 100)",
    "comments": "there's no parameter placeholder marker, but prepare-bind-execute still works, except you only bind cols but not subtbl nor tags",
    "comments": "better not use this",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create stable st (ts timestamp, age int) tags (name varchar(20))",
      {
        "sql": "insert into xsuzhou using st tags ('ysuzhou') values (1665226861289, 100)",
        "executes": [
          {
            "params": [[{"timestamp":1665226961295}, {"int":200}]]
          }
        ]
      },{
        "sql": "select count(*) from st",
        "rs": [[2]],
        "positive": true
      }
    ]
  },{
    "comments": "insert into ? using st tags (?) values (1665226861289, 100)",
    "comments": "subtbl-tags as placeholder",
    "comments": "very much weird, although rarely in practice, taosc API seemly exposes no clue to let application know which part the placeholder belongs to",
    "comments": "better not use this",
    "git-commit":"d3b61c5261962d188914f7d5f8c241fed9322284",
    "conn": {},
    "sqls": [
      "drop database if exists foo",
      "create database foo",
      "use foo",
      "create stable st (ts timestamp, age int) tags (name varchar(20))",
      "insert into suzhou using st tags ('suzhou') values (1665226861288, 1)",
      {
        "comments": "this will fail",
        "sql": "insert into ? using st tags (?) values (1665226861289, 100)",
        "executes": [
          {
            "params": [["suzhou", "suzhou"]],
            "positive": false
          }
        ]
      },{
        "sql": "select count(*) from st",
        "rs": [[1]],
        "positive": true
      }
    ]
  }
]

